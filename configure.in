dnl Process this file with autoconf to produce a configure script.
AC_INIT(t1ascii.c)
AM_INIT_AUTOMAKE(t1utils, 1.26)
AM_CONFIG_HEADER(config.h)

AC_PROG_CC
AC_C_CONST

AC_ARG_ENABLE(warnings,
[  --enable-warnings       compile with -Wall],
if test "$enableval" = yes ; then
  CFLAGS="$CFLAGS -W -Wall"
fi)

dnl
dnl strerror()? inttypes.h?
dnl

AC_REPLACE_FUNCS(strerror)
AC_CHECK_HEADERS(inttypes.h, have_inttypes_h=yes, have_inttypes_h=no)

dnl
dnl Integer typedefs
dnl

if test "$have_inttypes_h" = no; then
    AC_CACHE_CHECK(for integer typedefs, ac_cv_int_types,
	[AC_EGREP_HEADER(uint32_t, sys/types.h, ac_cv_int_types=yes,
	  AC_EGREP_HEADER(u_int32_t, sys/types.h, ac_cv_int_types=close,
	    ac_cv_int_types=no))])
fi

if test "$have_inttypes_h" = yes; then
    :
elif test "$ac_cv_int_types" = yes; then
    AC_DEFINE(NEED_SYS_TYPES_H)
elif test "$ac_cv_int_types" = close; then
    AC_DEFINE(NEED_SYS_TYPES_H)
    AC_DEFINE(HAVE_U_INT_TYPES)
else
    AC_MSG_ERROR([
==============================================

Neither uint32_t nor u_int32_t defined by <inttypes.h> or <sys/types.h>!

==============================================])
fi

dnl
dnl Output
dnl

AC_OUTPUT(Makefile)
